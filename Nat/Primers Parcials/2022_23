package parcial1_2022_23;

import acm.program.CommandLineProgram;

public class Problema1 extends CommandLineProgram {


    public void run() {
        WordStats set = new WordStats();

        String[] s = {
                "Kebab",
                "Amarillo",
                "Relámpago",
                "Relámpago",
                "Rompe huesos",
                "Payaso",
                "hielo",
                "hielo",
                "hielo",
                "hielo",
                "Basketball",
                "futbol",
                "futbol"
        };

        for (int i = 0; i < s.length; i++) {
            if(set.countWord(s[i])) println("Añadiendo palabra a la colección");
        }

        println(set.toString());
    }

    public static void main(String[] args) {
        new Problema1().start(args);
    }
}

public class WordCounter {

    private String word;
    private int counter;

    public WordCounter(String word){
        this.word = word;
        counter = 1;
    }

    public int getCounter(){
        return counter;
    }

    public String getWord() {
        return word;
    }

    public void increment(){
        counter+=1;
    }
}

public class WordStats {
    WordCounter[] set;
    private int nw;

    public WordStats(){
        this(10);
    }

    public WordStats(int initialSize) {
        this.set = new WordCounter[initialSize];
    }

    public boolean countWord(String word){
        int pos = findWord(word);
        if(pos < 0){
            if(this.nw == this.set.length){
                resize();
            }
            this.set[nw] = new WordCounter(word);
            nw += 1;
            return true;
        }else{
            this.set[pos].increment();
            return false;
        }
    }

    private int findWord(String word) {
        for (int i = 0; i < nw; i++) {
            if(set[i].getWord().equals(word)){
                return i;
            }
        }
        return -1;
    }


    private void resize(){
        WordCounter[] aux = set;
        set = new WordCounter[nw*2];

        for (int i = 0; i < aux.length; i++) {
            set[i] = aux[i];
        }
    }

    private int getCounter(String word){
        int it = findWord(word);
        if(it < 0) return 0;
        return set[it].getCounter();
    }

    public String max(){
        if(nw == 0) return null;

        WordCounter wordMx = this.set[0];
        for (int i = 0; i < nw; i++) {
            if(wordMx.getCounter() < this.set[i].getCounter()) {
                wordMx = this.set[i];
            }
        }
        return wordMx.getWord();
    }

    @Override
    public String toString() {
        String r = "";

        for (int i = 0; i < nw; i++) {
            r = r.concat("Word: "+set[i].getWord()+" --- Counter: "+set[i].getCounter()+"\n");
        }
        return r;
    }
}

public class Problema2 extends CommandLineProgram {
    private static final int INITIAL_SIZE = 28;
    private WordStats stats;

    public void run() {
        this.stats = new WordStats(INITIAL_SIZE);

        String text = readLine("Dime un texto:  ");
        countWord(text);
        showResult();
    }

    private void showResult() {
        String max = stats.max();
        if(max == null) println("No hi ha palabras. ");
        else println("La palabra mas repetida es: "+max);
    }

    private void countWord(String t){
        StringTokenizer tk = new StringTokenizer(t," +-;:.");

        while(tk.hasMoreTokens()){
            String token = tk.nextToken();
            countValid(token);  // Antes en esta función tenía puesto "countWord" igual le dio un lapsus al profe a la hora de escribir.
        }
    }

    private void countValid(String word){
        if(isValid(word)) this.stats.countWord(word);
    }

    public boolean isValid(String word){
        for (int i = 0; i < word.length(); i++) {
            if(Character.isDigit(word.charAt(i))) return false;
        }
        return true;
    }


    public static void main(String[] args) {
        new Problema2().start(args);
    }
}


